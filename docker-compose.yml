services:
  # =========================
  # Reverse proxy + TLS
  # =========================
  traefik:
    image: traefik:v2.11
    container_name: traefik
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.stratum.address=:3335/tcp
      - --certificatesresolvers.le.acme.email=${TRAEFIK_ACME_EMAIL}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
      - --api=false
      - --log.level=INFO
    ports:
      - "80:80"       # ACME HTTP-01 + redirect
      - "443:443"     # HTTPS for API
      - "3335:3335"   # Stratum over TLS
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-acme:/letsencrypt
    networks: [public]
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=64m

  # =========================
  # Bitcoin Core (Full Node)
  # =========================
  bitcoin:
    build:
      context: ./bitcoin/docker
      dockerfile: Dockerfile
    image: bitcoin:latest
    container_name: bitcoin-core
    restart: unless-stopped
    # Public: ONLY P2P
    ports:
      - "8333:8333"   # P2P
    volumes:
      - bitcoin-data:/data
      - ./bitcoin/bitcoin.conf:/data/bitcoin.conf:ro
    environment:
      - BITCOIN_DATA=/data
      - BITCOIN_RPC_USER=${BITCOIN_RPC_USER:-bitcoinrpc}
      - BITCOIN_RPC_PASSWORD=${BITCOIN_RPC_PASSWORD}
      - BITCOIN_NETWORK=${BITCOIN_NETWORK:-mainnet}
    command: [
      "bitcoind",
      "-datadir=/data",
      "-printtoconsole",
      "-server=1",
      "-rpcuser=${BITCOIN_RPC_USER:-bitcoinrpc}",
      "-rpcpassword=${BITCOIN_RPC_PASSWORD}",
      "-rpcallowip=172.16.0.0/12",       # Docker subnets only
      "-rpcbind=0.0.0.0:8332"
    ]
    healthcheck:
      test: ["CMD", "bitcoin-cli", "-datadir=/data", "-rpcuser=${BITCOIN_RPC_USER:-bitcoinrpc}", "-rpcpassword=${BITCOIN_RPC_PASSWORD}", "-getinfo"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 120s
    networks: [backend]
    logging:
      driver: json-file
      options: { max-size: "100m", max-file: "3" }
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=64m
    deploy:
      resources:
        limits:
          memory: ${BITCOIN_MEMORY_LIMIT:-16g}
          cpus: "${BITCOIN_CPU_LIMIT:-4.0}"
        reservations:
          memory: 4g
          cpus: "2.0"

  # =========================
  # Fractal-Bitcoin (FB)
  # =========================
  fractal-bitcoin:
    build:
      context: ./fractal-bitcoin/docker
      dockerfile: Dockerfile
    image: fractal-bitcoin:latest
    container_name: fractal-bitcoin-core
    restart: unless-stopped
    # Public: ONLY P2P
    ports:
      - "8435:8435"   # P2P
    volumes:
      - fractal-data:/data
      - ./fractal-bitcoin/fractal.conf:/data/fractal.conf:ro
    environment:
      - FRACTAL_DATA=/data
      - FRACTAL_RPC_USER=${FRACTAL_RPC_USER:-fractalrpc}
      - FRACTAL_RPC_PASSWORD=${FRACTAL_RPC_PASSWORD}
    command: [
      "bitcoind",
      "-datadir=/data",
      "-printtoconsole",
      "-server=1",
      "-conf=/data/fractal.conf",        # load ZMQ + settings
      "-rpcuser=${FRACTAL_RPC_USER:-fractalrpc}",
      "-rpcpassword=${FRACTAL_RPC_PASSWORD}",
      "-rpcallowip=172.16.0.0/12",       # Docker subnets only
      "-rpcbind=0.0.0.0:8434",
      "-port=8435"
    ]
    healthcheck:
      test: ["CMD", "bitcoin-cli", "-datadir=/data", "-rpcuser=${FRACTAL_RPC_USER:-fractalrpc}", "-rpcpassword=${FRACTAL_RPC_PASSWORD}", "-getinfo"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 120s
    networks: [backend]
    logging:
      driver: json-file
      options: { max-size: "100m", max-file: "3" }
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=64m

  # ==================================================
  # Public-Pool (FB) — behind Traefik (TLS)
  # ==================================================
  public-pool-fb:
    build:
      context: ./public-pool
      dockerfile: Dockerfile
    image: public-pool:latest
    container_name: public-pool-fb
    restart: unless-stopped
    depends_on:
      fractal-bitcoin:
        condition: service_healthy
    # No direct ports — exposed via Traefik
    environment:
      # Core RPC (internal)
      BITCOIN_RPC_URL: http://fractal-bitcoin
      BITCOIN_RPC_USER: ${FRACTAL_RPC_USER:-fractalrpc}
      BITCOIN_RPC_PASSWORD: ${FRACTAL_RPC_PASSWORD}
      BITCOIN_RPC_PORT: "8434"
      # ZMQ
      BITCOIN_ZMQ_HOST: tcp://fractal-bitcoin:28432
      # Internal listen (Traefik will route to these)
      STRATUM_PORT: "3333"
      API_PORT: "3334"
      POOL_IDENTIFIER: ${POOL_IDENTIFIER:-YourPool}
      # API_SECURE can stay false internally; Traefik terminates TLS
      API_SECURE: "false"
    labels:
      - "traefik.enable=true"

      # HTTPS API on https://$POOL_API_DOMAIN
      - "traefik.http.routers.pool-api.rule=Host(`${POOL_API_DOMAIN}`)"
      - "traefik.http.routers.pool-api.entrypoints=websecure"
      - "traefik.http.routers.pool-api.tls.certresolver=le"
      - "traefik.http.services.pool-api.loadbalancer.server.port=3334"

      # TCP Stratum+TLS on stratum.$POOL_STRATUM_DOMAIN:3335
      - "traefik.tcp.routers.stratum.rule=HostSNI(`${POOL_STRATUM_DOMAIN}`)"
      - "traefik.tcp.routers.stratum.entrypoints=stratum"
      - "traefik.tcp.routers.stratum.tls=true"
      - "traefik.tcp.routers.stratum.tls.certresolver=le"
      - "traefik.tcp.services.stratum.loadbalancer.server.port=3333"
    networks: [backend, public]
    logging:
      driver: json-file
      options: { max-size: "50m", max-file: "3" }
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=64m
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: "1g"

networks:
  backend:
    driver: bridge
  public:
    driver: bridge

volumes:
  bitcoin-data:
    external: true
    name: bitcoin-stack_bitcoin-data
  fractal-data:
    external: true
    name: bitcoin-stack_fractal-data
  traefik-acme:
    driver: local